@model GamingGroove.Views.Shared.ViewModel
@using System.Security.Claims

@{
	ViewData["Title"] = "FeedPage";
}

@{
	string notificacao = "";
}
@if(@Model.getTodosUsuariosSolicitacoes.Count() > 0){
	 notificacao = "(" + Model.getTodosUsuariosSolicitacoes.Count().ToString() + ")";
}   
<title>Feed @notificacao</title>
<link rel="stylesheet" href="~/css/FeedPage.css" asp-append-version="true" />

<div class="main-container">

	<div class="left-container">
		<div class="myCommunities">
			<div class="listTitle">Minhas comunidades</div>
			<div class="communitiesList">
				@if(Model.getComunidadesUsuario == null)
				{
					<div>Você ainda não faz parte de comunidades.</div>
				}
				else
				{
					@foreach (var item in Model.getComunidadesUsuario) {
						
						int _comunidadeIdCadaComunidade = item.comunidade.comunidadeId;
						int numberOfMembersEachCommunity = Model.GetNumberOfMembersInCommunity(_comunidadeIdCadaComunidade);
						<a href="~/ComunidadePage/@item.comunidade.nomeComunidade">
							<div class="communities-items">
								@if (item.comunidade.iconeComunidade != null)
								{
									<img class="list-communityIcon" src="data:image/png;base64,@Convert.ToBase64String(item.comunidade.iconeComunidade)" alt="Imagem de Perfil" />
								}
								else
								{
									<img class="list-communityIcon" src="~/images/icons/user-standard.png" alt="Imagem de Perfil" />
								}               
								<div class="communityInfo-container">
									<div class="communityName">@item.comunidade.nomeComunidade</div>                                
									<div class="list-numberOfMembers">@numberOfMembersEachCommunity membros</div>
								</div>
							</div>	
						</a>
					}				
				}
			</div>
		</div>		
	</div>

	<div class="center-container">
		<div class="buttons-container">
			<button type="button" class="myCommunities-button" id="myCommunitiesButton" data-bs-toggle="modal" data-bs-target="#myCommunitiesModal">Minhas comunidades</button>	
			<button type="button" class="myTeams-button" id="myTeamsButton" data-bs-toggle="modal" data-bs-target="#myTeamsModal">Minhas equipes</button>	
		</div>
		<div class="post-container">
			@if(Model.getFeedPublicacoes.Count() == 0)
			{
				<div class="noPosts">Você ainda não tem publicações para ver aqui :(</div>
			}
			@foreach(var item in Model.getFeedPublicacoes.OrderByDescending(p => p.dataPublicacao))
			{
				var dataLimite = DateTime.Now.AddDays(-7);
				if(item.dataPublicacao > dataLimite) 
				{				
					Model.getUsuarioPublicacao = Model.getTodosUsuarios.FirstOrDefault(up => up.usuarioId == item.usuarioId);
					Model.getComunidadePublicacao = Model.getTodasComunidades.FirstOrDefault(cp => cp.comunidadeId == item.comunidadeId);
					int getCurtidasPublicacao = Model.getTodasCurtidas.Count(cp => cp.publicacaoId == item.publicacaoId);
					int getComentariosPublicacao = Model.getTodosComentarios.Count(cp => cp.publicacaoId == item.publicacaoId);
					<div class="post">
						<div class="postHeader">
							<a href="~/PerfilPage/@Model.getUsuarioPublicacao.nomeUsuario"><div class="user-container">
								@if(Model.getUsuarioPublicacao.iconePerfil != null)
								{
									<img class="userIcon" src="data:image/png;base64,@Convert.ToBase64String(Model.getUsuarioPublicacao.iconePerfil)" alt="Imagem de Perfil do Usuário" />
								}
								else
								{
									<img class="userIcon" src="~/images/icons/user-standard.png" alt="Imagem de Perfil" />
								}
								
								<div class="userName">@Model.getUsuarioPublicacao.nomeUsuario</div>
							</div></a>
							@if(Model.getComunidadePublicacao.iconeComunidade != null)
							{
								<a href="~/ComunidadePage/@Model.getComunidadePublicacao.nomeComunidade"><img class="post-communityIcon" src="data:image/png;base64,@Convert.ToBase64String(Model.getComunidadePublicacao.iconeComunidade)" alt="Imagem de ícone da Comunidade" title="@Model.getComunidadePublicacao.nomeComunidade"></a>
							}
							else
							{
								<a href="~/ComunidadePage/@Model.getComunidadePublicacao.nomeComunidade"><img class="post-communityIcon" src="~/images/icons/user-standard.png" alt="Imagem de ícone da Comunidade" title="@Model.getComunidadePublicacao.nomeComunidade"></a>
							}
							
						</div>
						<div class="postContent">
							<div class="postText">@item.textoPublicacao</div>
							@if(item.midiaPublicacao != null)
							{
								<img type="button" class="postImage"data-bs-toggle="modal" data-bs-target="#imageModal-@item.publicacaoId" src="data:image/png;base64,@Convert.ToBase64String(item.midiaPublicacao)" alt="">
							}					
						</div>
					<div class="postNumbers">
						<div class="postLikes" type="button" data-bs-toggle="modal" data-bs-target="#curtidasModal-@item.publicacaoId">@getCurtidasPublicacao curtidas</div>
						<div class="postComments" type="button" id="postButtons" data-bs-toggle="modal" data-bs-target="#publicacaoModal-@item.publicacaoId">@getComentariosPublicacao comentários</div>
					</div>
						<div class="postButtons">
							<div class="interactionButtons-container">
							<form asp-action="CurtirPublicacao">		
								@{
									var existeCurtida = Model.getTodasCurtidas.FirstOrDefault(uc => uc.usuarioId.ToString() == User.FindFirstValue(ClaimTypes.NameIdentifier) && uc.publicacaoId == item.publicacaoId);
								}
								<input type="hidden" name="IdPublicacao" value="@item.publicacaoId" />
								@if(existeCurtida != null)
								{
									<button class="postLikes-hidden" type="submit"><img class="postLikes-button" id="postButtons-existLike" src="~/images/icons/like-icon.svg" ></button>
								}
								else
								{
									<button class="postLikes-hidden" type="submit"><img class="postLikes-button" id="postButtons" src="~/images/icons/like-icon.svg" ></button>
								}	
							</form>		
								<img type="button" class="postComments-button" id="postButtons" data-bs-toggle="modal" data-bs-target="#publicacaoModal-@item.publicacaoId" src="~/images/icons/comment-icon.svg" alt="">			
							</div>
								@if(item.usuarioId.ToString() == User.FindFirstValue(ClaimTypes.NameIdentifier)){}
								else
								{
									<img type="button" data-bs-toggle="modal" data-bs-target="#reportPostModal-@item.publicacaoId" class="reportButton" src="~/images/icons/report-icon.svg" alt="">
								}	
						</div>
					</div>
				}	
			}
		</div>


	</div>


    <div class="right-container">
        <div class="myTeams-box">
			<div class="teamsListTitle">Minhas equipes</div>
			<div class="teamsList">
				@foreach (var item in Model.getEquipesUsuario.OrderBy(m => m.cargoEquipe)) {
                    <div type="button" class="teamsItems" data-bs-toggle="modal" data-bs-target="#teamsModal-@item.equipeId">
                        @if(item.cargoEquipe == CargosEnum.ADM)
                        {
                            @if (item.equipe.iconeEquipe != null)
                            {
                                <img class="list-teamIcon" src="data:image/png;base64,@Convert.ToBase64String(item.equipe.iconeEquipe)" style="border: 2px solid #FFE27C;" alt="Imagem de Perfil"/>
                            }
                            else
                            {
                                <img class="list-teamIcon" src="~/images/icons/user-standard.png" style="border: 2px solid #FFE27C;" alt="Imagem de Perfil"/>
                            }    
                            <img class="crownIcon-list" src="~/images/icons/crown-icon.svg">
                            <div class="communityInfo-container">
                                <div class="teamName" style="color: #FFE27C;">@item.equipe.nomeEquipe</div>                                
                            </div>
                            
                        }      
                        else {
                            @if (item.equipe.iconeEquipe != null)
                            {
                                <img class="list-teamIcon" src="data:image/png;base64,@Convert.ToBase64String(item.equipe.iconeEquipe)" alt="Imagem de Perfil"/>
                            }
                            else
                            {
                                <img class="list-teamIcon" src="~/images/icons/user-standard.png" alt="Imagem de Perfil"/>
                            }   
                            <div class="communityInfo-container">
                                <div class="teamName">@item.equipe.nomeEquipe</div>                                
                            </div>
                        }     

                    </div>			
				}
			</div>
		</div>		
    </div>

</div>


@foreach (var item in Model.getFeedPublicacoes)
{
	Model.getUsuarioPublicacao = Model.getTodosUsuarios.FirstOrDefault(up => up.usuarioId == item.usuarioId);
	Model.getComentariosPublicacao = Model.getTodosComentarios.Where(c => c.publicacaoId == item.publicacaoId).ToList();
	
    <div class="modal fade" id="publicacaoModal-@item.publicacaoId" tabindex="-1" aria-labelledby="publicacaoModalLabel" aria-hidden="true">
        <div class="modal-dialog" id="commentsModal-dialog">
            <div class="modal-content" id="commentsModal-content">
                <div class="commentsHeader">
					<a href="~/PerfilPage/@Model.getUsuarioPublicacao.nomeUsuario">
					@if(Model.getUsuarioPublicacao.iconePerfil != null)
					{
						<img class="userIcon-post" src="data:image/png;base64,@Convert.ToBase64String(Model.getUsuarioPublicacao.iconePerfil)" alt="Imagem de Perfil do Usuário" />
					}
					else
					{
						<img class="userIcon-post" src="~/images/icons/user-standard.png" alt="Imagem de Perfil" />
					}
					</a>
                    <div class="modal-title" id="usuarioModalLabel">COMENTÁRIOS<div>Publicação de <span>@Model.getUsuarioPublicacao.nomeUsuario</span></div></div>
                    <button type="button" class="closeButton" data-bs-dismiss="modal" aria-label="Fechar">X</button>
                </div>
                <div class="commentsList">
                    @foreach(var comentario in Model.getComentariosPublicacao)
					{
						Model.getUsuarioComentario = Model.getTodosUsuarios.FirstOrDefault(up => up.usuarioId == comentario.usuarioId);
						<div class="comment-container">
							<div class="commentHeader">
								<a href="~/PerfilPage/@Model.getUsuarioComentario.nomeUsuario"><div class="commentUser">
									@if(Model.getUsuarioComentario.iconePerfil != null)
									{
										<img class="userIcon-comment" src="data:image/png;base64,@Convert.ToBase64String(Model.getUsuarioComentario.iconePerfil)" alt="Imagem de Perfil do Usuário" />
									}
									else
									{
										<img class="userIcon-comment" src="~/images/icons/user-standard.png" alt="Imagem de Perfil" />
									}
									<div class="userName-comment">@Model.getUsuarioComentario.nomeUsuario</div>
								</div></a>
								<div class="commentDateTime">@comentario.dataComentario</div>
							</div>
							<div class="commentContent">@comentario.textoComentario</div>
						</div>
					}
                </div>
				<form class="userComment-form" id="userComment-form" asp-action="Comentar">		
					<input type="hidden" name="IdPublicacao" value="@item.publicacaoId" />
					<textarea class="userComment-text" name="TextoComentario" placeholder="Digite seu comentário"></textarea>
					<button type="submit" class="sendComment-button">Comentar</button>
				</form>
            </div>
        </div>
    </div>
}


@foreach (var item in Model.getFeedPublicacoes)
{
	Model.getUsuarioPublicacao = Model.getTodosUsuarios.FirstOrDefault(up => up.usuarioId == item.usuarioId);
	Model.getCurtidasPublicacao = Model.getTodasCurtidas.Where(c => c.publicacaoId == item.publicacaoId).ToList();
	int getCurtidasPublicacao = Model.getTodasCurtidas.Count(cp => cp.publicacaoId == item.publicacaoId);
	
    <div class="modal fade" id="curtidasModal-@item.publicacaoId" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog" id="likesModal-dialog">
            <div class="modal-content" id="likesModal-content">
                <div class="likesHeader">
					<a href="~/PerfilPage/@Model.getUsuarioPublicacao.nomeUsuario">
					@if(Model.getUsuarioPublicacao.iconePerfil != null)
					{
						<img class="userIcon-post" src="data:image/png;base64,@Convert.ToBase64String(Model.getUsuarioPublicacao.iconePerfil)" alt="Imagem de Perfil do Usuário" />
					}
					else
					{
						<img class="userIcon-post" src="~/images/icons/user-standard.png" alt="Imagem de Perfil" />
					}
					</a>
                    <div class="modal-title" id="usuarioModalLabel"><div>Publicação de <span>@Model.getUsuarioPublicacao.nomeUsuario</span><br>@getCurtidasPublicacao curtidas</div></div>
                    <button type="button" class="closeButton" data-bs-dismiss="modal" aria-label="Fechar">X</button>
                </div>
                <div class="likesList">
					
                    @foreach(var curtida in Model.getCurtidasPublicacao)
					{
						var getUsuarioCurtida = Model.getTodosUsuarios.FirstOrDefault(up => up.usuarioId == curtida.usuarioId);
						<div class="likes-container">
							<div class="likes-header">
								<a href="~/PerfilPage/@getUsuarioCurtida.nomeUsuario"><div class="likeUser">
									@if(getUsuarioCurtida.iconePerfil != null)
									{
										<img class="userIcon-like" src="data:image/png;base64,@Convert.ToBase64String(getUsuarioCurtida.iconePerfil)" alt="Imagem de Perfil do Usuário" />
									}
									else
									{
										<img class="userIcon-like" src="~/images/icons/user-standard.png" alt="Imagem de Perfil" />
									}
									<div class="userName-like">@getUsuarioCurtida.nomeUsuario</div>
								</div></a>
							</div>
						</div>
					}
                </div>

            </div>
        </div>
    </div>
}


@foreach (var item in Model.getFeedPublicacoes)
{	
    <div class="modal fade" id="imageModal-@item.publicacaoId" tabindex="-1" aria-labelledby="publicacaoModalLabel" aria-hidden="true">
        <div class="modal-dialog" id="imageModal-dialog">
            <div class="modal-content" id="imageModal-content">
                @if(item.midiaPublicacao != null)
				{
					<img class="postImageModal" src="data:image/png;base64,@Convert.ToBase64String(item.midiaPublicacao)" alt="">
				}		
            </div>
        </div>
    </div>
}


<div class="modal fade" id="myCommunitiesModal" tabindex="-1">
	<div class="modal-dialog" id="myCommunitiesModal-dialog">
		<div class="modal-content" id="myCommunitiesModal-content">
			<div class="myCommunities">
				<div class="listTitle">Minhas comunidades</div>
				<div class="communitiesList">
					@if(Model.getComunidadesUsuario == null)
					{
						<div>Você ainda não faz parte de comunidades.</div>
					}
					else
					{
						@foreach (var item in Model.getComunidadesUsuario) {
							
							int _comunidadeIdCadaComunidade = item.comunidade.comunidadeId;
							int numberOfMembersEachCommunity = Model.GetNumberOfMembersInCommunity(_comunidadeIdCadaComunidade);
							<a href="~/ComunidadePage/@item.comunidade.nomeComunidade">
								<div class="communities-items">
									@if (item.comunidade.iconeComunidade != null)
									{
										<img class="list-communityIcon" src="data:image/png;base64,@Convert.ToBase64String(item.comunidade.iconeComunidade)" alt="Imagem de Perfil" />
									}
									else
									{
										<img class="list-communityIcon" src="~/images/icons/user-standard.png" alt="Imagem de Perfil" />
									}               
									<div class="communityInfo-container">
										<div class="communityName">@item.comunidade.nomeComunidade</div>                                
										<div class="list-numberOfMembers">@numberOfMembersEachCommunity membros</div>
									</div>
								</div>	
							</a>
						}				
					}
				</div>
				<button type="button" class="modalCloseButton" data-bs-dismiss="modal" aria-label="Fechar">Fechar</button>
			</div>
		</div>
	</div>
</div>



<div class="modal fade" id="myTeamsModal" tabindex="-1">
	<div class="modal-dialog" id="myTeamsModal-dialog">
		<div class="modal-content" id="myTeamsModal-content">
            <div class="myTeams-box">
                <div class="teamsListTitle">Minhas equipes</div>
                <div class="teamsList">
                    @foreach (var item in Model.getEquipesUsuario.OrderBy(m => m.cargoEquipe)) {
                        <div type="button" class="teamsItems" data-bs-toggle="modal" data-bs-target="#teamsModal-@item.equipeId">
                            @if(item.cargoEquipe == CargosEnum.ADM)
                            {
                                @if (item.equipe.iconeEquipe != null)
                                {
                                    <img class="list-teamIcon" src="data:image/png;base64,@Convert.ToBase64String(item.equipe.iconeEquipe)" style="border: 2px solid #FFE27C;" alt="Imagem de Perfil"/>
                                }
                                else
                                {
                                    <img class="list-teamIcon" src="~/images/icons/user-standard.png" style="border: 2px solid #FFE27C;" alt="Imagem de Perfil"/>
                                }    
                                <img class="crownIcon-list" src="~/images/icons/crown-icon.svg">
                                <div class="communityInfo-container">
                                    <div class="teamName" style="color: #FFE27C;">@item.equipe.nomeEquipe</div>                                
                                </div>
                                
                            }      
                            else {
                                @if (item.equipe.iconeEquipe != null)
                                {
                                    <img class="list-teamIcon" src="data:image/png;base64,@Convert.ToBase64String(item.equipe.iconeEquipe)" alt="Imagem de Perfil"/>
                                }
                                else
                                {
                                    <img class="list-teamIcon" src="~/images/icons/user-standard.png" alt="Imagem de Perfil"/>
                                }   
                                <div class="communityInfo-container">
                                    <div class="teamName">@item.equipe.nomeEquipe</div>                                
                                </div>
                            }     
                            
                        </div>			
                    }
                </div>
                <button type="button" class="modalCloseButton" data-bs-dismiss="modal" aria-label="Fechar">Fechar</button>
		    </div>
		</div>
	</div>
</div>


@foreach (var item in Model.getFeedPublicacoes)
{
	Model.getComunidadePublicacao = Model.getTodasComunidades.FirstOrDefault(cp => cp.comunidadeId == item.comunidadeId);
	Model.getUsuarioPublicacao = Model.getTodosUsuarios.FirstOrDefault(up => up.usuarioId == item.usuarioId);
	
	<div class="modal fade" id="reportPostModal-@item.publicacaoId" tabindex="-1" aria-hidden="true">
		<div class="modal-dialog" id="reportModal-dialog">
			<div class="modal-content" id="reportModal-content">
				<form class="reportMain-container" asp-controller="Denuncia" asp-action="DenunciarPublicacao" enctype="multipart/form-data">
					<input type="hidden" name="PublicacaoId" value="@item.publicacaoId">
					<input type="hidden" name="NomeComunidade" value="@Model.getComunidadePublicacao.nomeComunidade">
					<div class="reportModal-container">
						<div class="report-container">  
							<div class="report-title">Você está prestes a denunciar uma publicação de <br><span>@Model.getUsuarioPublicacao.nomeUsuario</span></div>                  
							<div class="reportContent-container">
								<div class="reportType-container">
									<div class="favGames-label-container">
										<div class="favGames-label">Selecione o tipo de denúncia:</div>
										<div class="reportType-alert">@ViewBag.Message</div>
									</div>    
									<div class="form-group">
										<select name="TipoDenuncia" class="form-control" asp-items="Html.GetEnumSelectList<TiposDenuncia>()"></select>
									</div>
								</div>
								<div class="descriptionForm">
									<div>Faça uma descrição da denúncia:</div>
									<div class="form-group">
										<textarea type="text" name="DescricaoDenuncia" id="descriptionText-form" class="form-control bio-text" rows="10" maxlength="534"></textarea>
									</div>
								</div>
							</div>
							<div class="reportButtons-container">
								<button class="reportSubmit-button" type="button" class="closeButton" data-bs-dismiss="modal" aria-label="Fechar">Cancelar</button>
								<button class="reportSubmit-button" type="submit">Enviar denúncia</button>
							</div>
						</div>
					</div>
				</form>
			</div>
		</div>
	</div>
}






@foreach (var item in Model.getEquipes)
{
	var isMember = Model.getEquipesUsuario.FirstOrDefault(uc => uc.equipe.nomeEquipe == item.nomeEquipe);
    var equipesSolicitadas = Model.getTodosUsuariosEquipes.FirstOrDefault(uc => uc.equipe.nomeEquipe == item.nomeEquipe && uc.cargoEquipe == CargosEnum.Pendente);

    int _equipeIdCadaEquipe = item.equipeId;
    int numberOfMembersEachTeam = Model.GetNumberOfMembersInTeam(_equipeIdCadaEquipe);

    <div class="modal fade" id="teamsModal-@item.equipeId" tabindex="-1">
        <div class="modal-dialog" id="teamsModal-dialog">
            <div class="modal-content" id="teamsModal-content">
                <div class="teamFirstContainer">
                    <div class="teamHeader">
                        @if (item.iconeEquipe != null)
                        {
                            <img class="teamIcon-modal" src="data:image/png;base64,@Convert.ToBase64String(item.iconeEquipe)" alt="Imagem de Perfil do Usuário" />
                        }
                        else
                        {
                            <img class="teamIcon-modal" src="~/images/icons/user-standard.png" alt="Imagem de Perfil" />
                        }
                        <div class="teamInfo">
                            <div class="teamName-modal">@item.nomeEquipe</div>
                            <div class="teamGame-modal">@item.jogoEquipe</div>
                            @if(isMember != null && isMember.cargoEquipe.ToString() == "ADM")
                            {
                                <button type="button" class="editTeamButton" data-bs-toggle="modal" data-bs-target="#editTeamModal-@item.equipeId"><img class="editTeamButton-icon" src="~/images/icons/edit-icon.svg" alt=""></button>
                            }
                        </div>
                    </div>
                    <div class="teamButtons-container">
                        <button type="button" class="closeButton" data-bs-dismiss="modal" aria-label="Fechar">X</button>
						@if(isMember != null && isMember.cargoEquipe == CargosEnum.Membro)
						{
							<form class="joinCommunity-form" id="joinCommunity-form" asp-controller="EquipePage" asp-action="DeixarEquipe">		
								<input type="hidden" name="IdEquipe" value="@item.equipeId" />
								<button type="submit" class="joinQuitButton" title="Deixar equipe"><img class="leaveDeleteIcon" src="~/images/icons/leave-icon.svg"></button>
							</form>
						}
						else if(isMember != null && isMember.cargoEquipe == CargosEnum.ADM)
						{
                            <button type="button" class="joinQuitButton" data-bs-toggle="modal" data-bs-target="#deleteTeamModal-@item.equipeId" title="Apagar equipe"><img class="leaveDeleteIcon" src="~/images/icons/trash-icon.svg"></button>
						}
						else
						{
                            if(numberOfMembersEachTeam >= 12)
                            {
                                <div class="joinQuitButton" style="filter: grayscale(50%);" title="Não existem mais vagas nesta equipe">Entrar</div>
                            }
                            else
                            { 
                                if(equipesSolicitadas != null)
                                {
                                    <div class="joinQuitButton" style="filter: grayscale(50%);" title="Solicitação de ingresso enviada">...</div>
                                }
                                else
                                {
                                    <form class="joinTeam-form" id="joinTeam-form" asp-controller="EquipePage" asp-action="SolicitarIngressoEquipe">		
                                        <input type="hidden" name="IdEquipe" value="@item.equipeId" />
                                        <button type="submit" class="joinQuitButton">Entrar</button>
                                    </form>
                                }
                            }
						}
                    </div>
                </div>
                <div class="teamSecondContainer">
                    <div class="teamDescription-container">
                        <div class="descriptionTitle">Descrição da equipe</div>
                        <div class="teamDescription-box">@item.descricaoEquipe</div>
                    </div>
                    <div class="teamMembers-container">
                        <div class="teamMembers-title">Membros</div>
                        <div class="teamMembers-number">@numberOfMembersEachTeam/12</div>
                        <div class="teamMembers-list">
                            @{
                                var getMembrosEquipe = Model.getTodasSolicitacoes
                                    .Where(uc => uc.equipeId == item.equipeId && uc.cargoEquipe != CargosEnum.Pendente)
                                    .ToList();
                            }                            
                            @foreach (var membro in getMembrosEquipe.OrderBy(m => m.cargoEquipe))
                            {
                                var getMembro = Model.getTodosUsuarios.FirstOrDefault(up => up.usuarioId == membro.usuarioId);
                                <div class="members-container">
                                    <div class="member-header">
                                        <div class="memberHeader-info">
                                            @if(membro.cargoEquipe == CargosEnum.ADM)
                                            {
                                                <img class="admIcon" src="~/images/icons/crown-icon.svg" title="Líder da equipe">
                                            }
                                            else
                                            {
                                                <img class="admIcon" src="~/images/icons/sword-icon.svg" title="Membro da equipe">
                                            }
                                            
                                            <a href="~/PerfilPage/@getMembro.nomeUsuario">
                                                <div class="memberUser">
                                                    @if(getMembro.iconePerfil != null)
                                                    {
                                                        <img class="userIcon-member" src="data:image/png;base64,@Convert.ToBase64String(getMembro.iconePerfil)" alt="Imagem de Perfil do Usuário" />
                                                    }
                                                    else
                                                    {
                                                        <img class="userIcon-member" src="~/images/icons/user-standard.png" alt="Imagem de Perfil" />
                                                    }
                                                    <div class="userName-member">@getMembro.nomeUsuario</div>
                                                </div>
                                            </a>		
                                        </div>
                                        @{
                                            var IdEquipe = Model.getTodasSolicitacoes.FirstOrDefault(up => up.equipeId == item.equipeId && up.cargoEquipe == CargosEnum.ADM);
                                        }
                                        @if(membro.cargoEquipe != CargosEnum.ADM && User.FindFirst(ClaimTypes.NameIdentifier)?.Value == IdEquipe.usuarioId.ToString())
                                        {
                                            <form class="teamRequest-form" asp-controller="EquipePage" asp-action="ExpulsarMembroEquipe">
                                                <input type="hidden" name="IdUsuario" value="@membro.usuarioId">
                                                <input type="hidden" name="IdEquipe" value="@item.equipeId">
                                                <button type="submit" class="teamRequest-submit" title="Expulsar membro."><img class="xIcon-team" src="~/images/icons/x-icon.svg" title="Líder da equipe"></button>
                                            </form>
                                        }	
                                    </div>
                                </div>                            		
                            }
                        </div>
                    </div>
                    @if(isMember != null && isMember.cargoEquipe.ToString() == "ADM")
                    {
                        <div class="teamRequests-container">
                            <div class="teamRequests-title">Solicitações</div>
                            <div class="teamRequests-list">
                                @{
                                    var getSolicitacoesEquipe = Model.getTodasSolicitacoes
                                        .Where(uc => uc.equipeId == item.equipeId && uc.cargoEquipe == CargosEnum.Pendente)
                                        .ToList(); 
                                }                            
                                @foreach (var membro in getSolicitacoesEquipe)
                                {
                                    var getMembro = Model.getTodosUsuarios.FirstOrDefault(up => up.usuarioId == membro.usuarioId);
                                    <div class="members-container">
                                        <div class="request-header">
                                            <a href="~/PerfilPage/@getMembro.nomeUsuario"><div class="memberUser">
                                                @if(getMembro.iconePerfil != null)
                                                {
                                                    <img class="userIcon-member" src="data:image/png;base64,@Convert.ToBase64String(getMembro.iconePerfil)" alt="Imagem de Perfil do Usuário" />
                                                }
                                                else
                                                {
                                                    <img class="userIcon-member" src="~/images/icons/user-standard.png" alt="Imagem de Perfil" />
                                                }
                                                <div class="userName-member">@getMembro.nomeUsuario</div>
                                            </div></a>	
                                            <div class="teamRequest-buttons">
                                                <form class="teamRequest-form" asp-controller="EquipePage" asp-action="AceitarIngressoEquipe">
                                                    <input type="hidden" name="IdUsuario" value="@membro.usuarioId">
                                                    <input type="hidden" name="IdEquipe" value="@item.equipeId">
                                                    <button class="teamRequest-submit" type="submit"><img class="checkIcon-team" src="~/images/icons/check-icon.svg"></button>
                                                </form>   
                                                <form class="teamRequest-form" asp-controller="EquipePage" asp-action="RecusarIngressoEquipe">
                                                    <input type="hidden" name="IdUsuario" value="@membro.usuarioId">
                                                    <input type="hidden" name="IdEquipe" value="@item.equipeId">
                                                    <button class="teamRequest-submit" type="submit"><img class="xIcon-team" src="~/images/icons/x-icon.svg"></button>
                                                </form>   
                                            </div>	
                                        </div>
                                    </div>                            		
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}



@foreach (var item in Model.getEquipes)
{
    <div class="modal fade" id="deleteTeamModal-@item.equipeId" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog" id="modal-dialog">
            <div class="modal-content post" id="deleteTeamModal-content">
                <div class="commentsHeader">
                    <div class="modal-title" id="deleteModalLabel">Todos os dados referentes a esta equipe serão perdidos e não poderão ser recuperados.<br>Deseja realmente apagar a equipe <span>@item.nomeEquipe</span>?
                    </div>
                    <button type="button" class="closeButton-delete" data-bs-dismiss="modal" aria-label="Fechar">X</button>
                </div>
                <form class="joinCommunity-form" id="joinCommunity-form" asp-asp-controller="FeedPage" asp-action="ApagarEquipe">		
                    <input type="hidden" name="IdEquipe" value="@item.equipeId" />
                    <button type="submit" class="joinQuitButton" data-bs-toggle="modal">Apagar</button>
                </form>
            </div>
        </div>
    </div>
}


@foreach (var item in Model.getEquipes)
{
    <div class="modal fade" id="editTeamModal-@item.equipeId" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog" id="editTeamModal-dialog">
            <div class="modal-content post" id="editTeamModal-content">
                <div class="editTeamHeader">
                    <div class="editTeamModal-title">Edite sua equipe</div>
                    <button type="button" class="closeButton-delete" data-bs-dismiss="modal" aria-label="Fechar">X</button>
                </div>
                <form class="joinCommunity-form" id="joinCommunity-form" asp-asp-controller="FeedPage" asp-action="EditarEquipe" enctype="multipart/form-data">	
                    <div class="editTeam-form">	
                        <input type="hidden" name="EquipeId" value="@item.equipeId"/>
                        <input type="text" name="NomeEquipe" value="@item.nomeEquipe"/>
                        <div class="profileImage-input">
                            <label class="imageInput" for="profileIcon-input"><img class="uploadIcon" src="~/images/icons/upload-icon.svg" alt="">Ícone da equipe</label>
                            <input id="profileIcon-input" type="file" name="iconeEquipeArquivo" value="@item.iconeEquipe"/>
                        </div>   
                        <select name="JogoEquipe" class="form-control" asp-items="Html.GetEnumSelectList<JogosEnum>()">
                            <option value="@item.jogoEquipe">@EnumHelper.GetDisplayName(item.jogoEquipe)</option>
                        </select>
                        <textarea class="teamDescription-edit" name="TextoPublicacao">@item.descricaoEquipe</textarea>
                    </div>
                    <button type="submit" class="submit-button" data-bs-toggle="modal">Salvar alterações</button>
                </form>
            </div>
        </div>
    </div>
}