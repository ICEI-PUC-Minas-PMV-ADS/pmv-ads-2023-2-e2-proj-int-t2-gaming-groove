@model GamingGroove.Views.Shared.ViewModel
@using System.Security.Claims

@{
    ViewData["Title"] = "EquipePage";
}


@{
	string notificacao = "";
}
@if(@Model.getTodosUsuariosSolicitacoes.Count() > 0){
	 notificacao = "(" + Model.getTodosUsuariosSolicitacoes.Count().ToString() + ")";
}   
<title>Formador de Equipes @notificacao</title>
<link rel="stylesheet" href="~/css/EquipePage.css" asp-append-version="true" />


<div class="main-container">

    <div class="left-container">
        <div class="myTeams-box">
			<div class="teamsListTitle">Minhas equipes</div>
			<div class="teamsList">
				@foreach (var item in Model.getEquipesUsuario.OrderBy(m => m.cargoEquipe)) {
                    <div type="button" class="teamsItems" data-bs-toggle="modal" data-bs-target="#teamsModal-@item.equipeId">
                        @if(item.cargoEquipe == CargosEnum.ADM)
                        {
                            @if (item.equipe.iconeEquipe != null)
                            {
                                <img class="list-teamIcon" src="data:image/png;base64,@Convert.ToBase64String(item.equipe.iconeEquipe)" style="border: 2px solid #FFE27C;" alt="Imagem de Perfil"/>
                            }
                            else
                            {
                                <img class="list-teamIcon" src="~/images/icons/empty-icon.png" style="border: 2px solid #FFE27C;" alt="Imagem de Perfil"/>
                            }    
                            <img class="crownIcon-list" src="~/images/icons/crown-icon.svg">
                            <div class="communityInfo-container">
                                <div class="teamName" style="color: #FFE27C;">@item.equipe.nomeEquipe</div>                                
                            </div>
                            
                        }      
                        else {
                            @if (item.equipe.iconeEquipe != null)
                            {
                                <img class="list-teamIcon" src="data:image/png;base64,@Convert.ToBase64String(item.equipe.iconeEquipe)" alt="Imagem de Perfil"/>
                            }
                            else
                            {
                                <img class="list-teamIcon" src="~/images/icons/empty-icon.png" alt="Imagem de Perfil"/>
                            }   
                            <div class="communityInfo-container">
                                <div class="teamName">@item.equipe.nomeEquipe</div>                                
                            </div>
                        }     

                    </div>			
				}
			</div>
		</div>		
    </div>

    <div class="shortScreen-buttons">
        <button type="button" class="leftContainer-shortScreen" data-bs-toggle="modal" data-bs-target="#myTeamsModal">Minhas equipes</button>
        <button type="button" class="rightContainer-shortScreen" data-bs-toggle="modal" data-bs-target="#createTeamModal-modal">Criar equipe</button>
    </div>

    <div class="center-container">
        <div class="findTeams-title">Encontre equipes</div>
        <div class="findTeams">
            <form class="d-flex" role="search">
                <input class="form-control me-2" id="teamsSearch" type="search" placeholder="Buscar equipe">
            </form>
            <div class="findTeams-container">
                <div class="findTeams-list">
                    @foreach (var equipe in Model.getEquipesSugeridas)
                    {
                        int _equipeIdCadaEquipe = equipe.equipeId;
                        int numberOfMembersEachTeam = Model.GetNumberOfMembersInTeam(_equipeIdCadaEquipe);

                        <div type="button" class="findTeams-items" data-bs-toggle="modal" data-bs-target="#teamsModal-@equipe.equipeId" 
                        data-teamName="@equipe.equipe.nomeEquipe" data-teamGame="@equipe.equipe.jogoEquipe">
                            <div class="teamInfo-container">
                                @if (equipe.equipe.iconeEquipe != null)
                                {
                                    <img class="teamIcon" src="data:image/png;base64,@Convert.ToBase64String(equipe.equipe.iconeEquipe)" />
                                }
                                else
                                {
                                    <img class="teamIcon" src="~/images/icons/empty-icon.png" alt="Imagem de Perfil" />
                                }
                                <div class="teamInfo">
                                    <div class="teamName">@equipe.equipe.nomeEquipe</div>
                                    <div class="teamGame">@equipe.equipe.jogoEquipe</div>
                                </div>
                            </div>
                            <div class="teamNumberOfMembers">@numberOfMembersEachTeam/12</div>
                        </div>
                    }                    
                </div>
            </div>            
        </div>
    </div>


    <div class="right-container">
        <div class="large-screen">
            <div class="newCommunity-container">
                <div class="newCommunity-title">Crie uma nova equipe</div>			
                <button type="button" class="newCommunity-button" data-bs-toggle="modal" data-bs-target="#createTeamModal-modal">Criar</button>
            </div>
        </div>

        <div class="short-screen">
            <button type="button" class="newCommunity-button" data-bs-toggle="modal" data-bs-target="#createTeamModal-modal">Criar equipe</button>
        </div>
    </div>
</div>




<div class="modal fade" id="myTeamsModal" tabindex="-1">
	<div class="modal-dialog" id="myTeamsModal-dialog">
		<div class="modal-content" id="myTeamsModal-content">
            <div class="myTeams-box">
                <div class="teamsListTitle">Minhas equipes</div>
                <div class="teamsList">
                    @foreach (var item in Model.getEquipesUsuario.OrderBy(m => m.cargoEquipe)) {
                        <div type="button" class="teamsItems" data-bs-toggle="modal" data-bs-target="#teamsModal-@item.equipeId">
                            @if(item.cargoEquipe == CargosEnum.ADM)
                            {
                                @if (item.equipe.iconeEquipe != null)
                                {
                                    <img class="list-teamIcon" src="data:image/png;base64,@Convert.ToBase64String(item.equipe.iconeEquipe)" style="border: 2px solid #FFE27C;" alt="Imagem de Perfil"/>
                                }
                                else
                                {
                                    <img class="list-teamIcon" src="~/images/icons/empty-icon.png" style="border: 2px solid #FFE27C;" alt="Imagem de Perfil"/>
                                }    
                                <img class="crownIcon-list" src="~/images/icons/crown-icon.svg">
                                <div class="communityInfo-container">
                                    <div class="teamName" style="color: #FFE27C;">@item.equipe.nomeEquipe</div>                                
                                </div>
                                
                            }      
                            else {
                                @if (item.equipe.iconeEquipe != null)
                                {
                                    <img class="list-teamIcon" src="data:image/png;base64,@Convert.ToBase64String(item.equipe.iconeEquipe)" alt="Imagem de Perfil"/>
                                }
                                else
                                {
                                    <img class="list-teamIcon" src="~/images/icons/empty-icon.png" alt="Imagem de Perfil"/>
                                }   
                                <div class="communityInfo-container">
                                    <div class="teamName">@item.equipe.nomeEquipe</div>                                
                                </div>
                            }     
                            
                        </div>			
                    }
                </div>
                <button type="button" class="modalCloseButton" data-bs-dismiss="modal" aria-label="Fechar">Fechar</button>
		    </div>
		</div>
	</div>
</div>



<div class="modal fade" id="createTeamModal-modal" tabindex="-1" aria-labelledby="usuarioModalLabel" aria-hidden="true">
    <div class="modal-dialog" id="createTeamModal-dialog">
        <div class="modal-content post" id="createTeamModal-content">
            <form class="createTeam-form" asp-controller="EquipePage" asp-action="CriarEquipe" enctype="multipart/form-data">
                <div class="create-container">
                    <div class="createTeamModal-container">
                        <div class="createTeamModal-title">Crie sua Equipe</div>
                        <div class="teamName-container">
                            <div class="teamName">Escolha um nome para a sua equipe:</div>
                            <input name="NomeEquipe" id="communityName-input" />
                        </div>
                        <div class="secondSection-container">
                            <div class="teamGame-container">
                                <div class="imageInput-container">
                                    <div>Selecione o ícone:</div>
                                    <div class="teamIcon-input-container">
                                        <div class="teamIcon-input">
                                            <label class="imageInput" for="teamIcon-input"><img class="uploadIcon" src="~/images/icons/upload-icon.svg">Ícone</label>
                                            <input id="teamIcon-input" name="iconeEquipeArquivo" type="file" />
                                        </div>
                                    </div>
                                </div>
                                <div class="teamGame-label-container">
                                    <div class="teamGame-label">Selecione um jogo:</div>
                                </div>

                                <div class="form-group">
                                    <select name="JogoEquipe" class="form-control" asp-items="Html.GetEnumSelectList<JogosEnum>()"></select>
                                </div>
                               
                            </div>
                            <div class="createDescription-container">
                                <div>Faça uma descrição da sua equipe:</div>
                                <div class="form-group">
                                    <textarea name="DescricaoEquipe" class="form-control createDescription" rows="10"></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="buttons-container">
                            <button type="button" class="submit-button" data-bs-dismiss="modal">Cancelar</button>
                            <button class="submit-button" value="CriarEquipe" type="submit">Criar equipe</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>




@foreach (var item in Model.getEquipes)
{
	var isMember = Model.getEquipesUsuario.FirstOrDefault(uc => uc.equipe.nomeEquipe == item.nomeEquipe);
    var equipesSolicitadas = Model.getTodosUsuariosEquipes.FirstOrDefault(uc => uc.equipe.nomeEquipe == item.nomeEquipe && uc.cargoEquipe == CargosEnum.Pendente);

    int _equipeIdCadaEquipe = item.equipeId;
    int numberOfMembersEachTeam = Model.GetNumberOfMembersInTeam(_equipeIdCadaEquipe);

    <div class="modal fade" id="teamsModal-@item.equipeId" tabindex="-1">
        <div class="modal-dialog" id="teamsModal-dialog">
            <div class="modal-content" id="teamsModal-content">
                <div class="teamFirstContainer">
                    <div class="teamHeader">
                        @if (item.iconeEquipe != null)
                        {
                            <img class="teamIcon-modal" src="data:image/png;base64,@Convert.ToBase64String(item.iconeEquipe)" alt="Imagem de Perfil do Usuário" />
                        }
                        else
                        {
                            <img class="teamIcon-modal" src="~/images/icons/empty-icon.png" alt="Imagem de Perfil" />
                        }
                        <div class="teamInfo">
                            <div class="teamName-modal">@item.nomeEquipe</div>
                            <div class="teamGame-modal">@item.jogoEquipe</div>
                            @if(isMember != null && isMember.cargoEquipe.ToString() == "ADM")
                            {
                                <button type="button" class="editTeamButton" data-bs-toggle="modal" data-bs-target="#editTeamModal-@item.equipeId"><img class="editTeamButton-icon" src="~/images/icons/edit-icon.svg" alt=""></button>
                            }
                        </div>
                    </div>
                    <div class="teamButtons-container">
                        <button type="button" class="closeButton" data-bs-dismiss="modal" aria-label="Fechar">X</button>
						@if(isMember != null && isMember.cargoEquipe == CargosEnum.Membro)
						{
							<form class="joinCommunity-form" id="joinCommunity-form" asp-controller="EquipePage" asp-action="DeixarEquipe">		
								<input type="hidden" name="IdEquipe" value="@item.equipeId" />
								<button type="submit" class="joinQuitButton" title="Deixar equipe"><img class="leaveDeleteIcon" src="~/images/icons/leave-icon.svg"></button>
							</form>
						}
						else if(isMember != null && isMember.cargoEquipe == CargosEnum.ADM)
						{
                            <button type="button" class="joinQuitButton" data-bs-toggle="modal" data-bs-target="#deleteTeamModal-@item.equipeId" title="Apagar equipe"><img class="leaveDeleteIcon" src="~/images/icons/trash-icon.svg"></button>
						}
						else
						{
                            if(numberOfMembersEachTeam >= 12)
                            {
                                <div class="joinQuitButton" style="filter: grayscale(50%);" title="Não existem mais vagas nesta equipe">Entrar</div>
                            }
                            else
                            { 
                                if(equipesSolicitadas != null)
                                {
                                    <div class="joinQuitButton" style="filter: grayscale(50%);" title="Solicitação de ingresso enviada">...</div>
                                }
                                else
                                {
                                    <form class="joinTeam-form" id="joinTeam-form" asp-controller="EquipePage" asp-action="SolicitarIngressoEquipe">		
                                        <input type="hidden" name="IdEquipe" value="@item.equipeId" />
                                        <button type="submit" class="joinQuitButton">Entrar</button>
                                    </form>
                                }
                            }
						}
                    </div>
                </div>
                <div class="teamSecondContainer">
                    <div class="teamDescription-container">
                        <div class="descriptionTitle">Descrição da equipe</div>
                        <div class="teamDescription-box">@item.descricaoEquipe</div>
                    </div>
                    <div class="teamMembers-container">
                        <div class="teamMembers-title">Membros</div>
                        <div class="teamMembers-number">@numberOfMembersEachTeam/12</div>
                        <div class="teamMembers-list">
                            @{
                                var getMembrosEquipe = Model.getTodasSolicitacoes
                                    .Where(uc => uc.equipeId == item.equipeId && uc.cargoEquipe != CargosEnum.Pendente)
                                    .ToList();
                            }                            
                            @foreach (var membro in getMembrosEquipe.OrderBy(m => m.cargoEquipe))
                            {
                                var getMembro = Model.getTodosUsuarios.FirstOrDefault(up => up.usuarioId == membro.usuarioId);
                                <div class="members-container">
                                    <div class="member-header">
                                        <div class="memberHeader-info">
                                            @if(membro.cargoEquipe == CargosEnum.ADM)
                                            {
                                                <img class="admIcon" src="~/images/icons/crown-icon.svg" title="Líder da equipe">
                                            }
                                            else
                                            {
                                                <img class="admIcon" src="~/images/icons/sword-icon.svg" title="Membro da equipe">
                                            }
                                            
                                            <a href="~/PerfilPage/@getMembro.nomeUsuario">
                                                <div class="memberUser">
                                                    @if(getMembro.iconePerfil != null)
                                                    {
                                                        <img class="userIcon-member" src="data:image/png;base64,@Convert.ToBase64String(getMembro.iconePerfil)" alt="Imagem de Perfil do Usuário" />
                                                    }
                                                    else
                                                    {
                                                        <img class="userIcon-member" src="~/images/icons/empty-icon.png" alt="Imagem de Perfil" />
                                                    }
                                                    <div class="userName-member">@getMembro.nomeUsuario</div>
                                                </div>
                                            </a>		
                                        </div>
                                        @{
                                            var IdEquipe = Model.getTodasSolicitacoes.FirstOrDefault(up => up.equipeId == item.equipeId && up.cargoEquipe == CargosEnum.ADM);
                                        }
                                        @if(membro.cargoEquipe != CargosEnum.ADM && User.FindFirst(ClaimTypes.NameIdentifier)?.Value == IdEquipe.usuarioId.ToString())
                                        {
                                            <form class="teamRequest-form" asp-controller="EquipePage" asp-action="ExpulsarMembroEquipe">
                                                <input type="hidden" name="IdUsuario" value="@membro.usuarioId">
                                                <input type="hidden" name="IdEquipe" value="@item.equipeId">
                                                <button type="submit" class="teamRequest-submit" title="Expulsar membro."><img class="xIcon-team" src="~/images/icons/x-icon.svg" title="Líder da equipe"></button>
                                            </form>
                                        }	
                                    </div>
                                </div>                            		
                            }
                        </div>
                    </div>
                    @if(isMember != null && isMember.cargoEquipe.ToString() == "ADM")
                    {
                        <div class="teamRequests-container">
                            <div class="teamRequests-title">Solicitações</div>
                            <div class="teamRequests-list">
                                @{
                                    var getSolicitacoesEquipe = Model.getTodasSolicitacoes
                                        .Where(uc => uc.equipeId == item.equipeId && uc.cargoEquipe == CargosEnum.Pendente)
                                        .ToList(); 
                                }                            
                                @foreach (var membro in getSolicitacoesEquipe)
                                {
                                    var getMembro = Model.getTodosUsuarios.FirstOrDefault(up => up.usuarioId == membro.usuarioId);
                                    <div class="members-container">
                                        <div class="request-header">
                                            <a href="~/PerfilPage/@getMembro.nomeUsuario"><div class="memberUser">
                                                @if(getMembro.iconePerfil != null)
                                                {
                                                    <img class="userIcon-member" src="data:image/png;base64,@Convert.ToBase64String(getMembro.iconePerfil)" alt="Imagem de Perfil do Usuário" />
                                                }
                                                else
                                                {
                                                    <img class="userIcon-member" src="~/images/icons/empty-icon.png" alt="Imagem de Perfil" />
                                                }
                                                <div class="userName-member">@getMembro.nomeUsuario</div>
                                            </div></a>	
                                            <div class="teamRequest-buttons">
                                                <form class="teamRequest-form" asp-controller="EquipePage" asp-action="AceitarIngressoEquipe">
                                                    <input type="hidden" name="IdUsuario" value="@membro.usuarioId">
                                                    <input type="hidden" name="IdEquipe" value="@item.equipeId">
                                                    <button class="teamRequest-submit" type="submit"><img class="checkIcon-team" src="~/images/icons/check-icon.svg"></button>
                                                </form>   
                                                <form class="teamRequest-form" asp-controller="EquipePage" asp-action="RecusarIngressoEquipe">
                                                    <input type="hidden" name="IdUsuario" value="@membro.usuarioId">
                                                    <input type="hidden" name="IdEquipe" value="@item.equipeId">
                                                    <button class="teamRequest-submit" type="submit"><img class="xIcon-team" src="~/images/icons/x-icon.svg"></button>
                                                </form>   
                                            </div>	
                                        </div>
                                    </div>                            		
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}



@foreach (var item in Model.getEquipes)
{
    <div class="modal fade" id="deleteTeamModal-@item.equipeId" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog" id="modal-dialog">
            <div class="modal-content post" id="deleteTeamModal-content">
                <div class="editTeamHeader">
                    <div class="modal-title" id="deleteModalLabel">Todos os dados referentes a esta equipe serão perdidos e não poderão ser recuperados.<br>Deseja realmente apagar a equipe <span>@item.nomeEquipe</span>?
                    </div>
                    <button type="button" class="closeButton-delete" data-bs-dismiss="modal" aria-label="Fechar">X</button>
                </div>
                <form class="joinCommunity-form" id="joinCommunity-form" asp-asp-controller="EquipePage" asp-action="ApagarEquipe">		
                    <input type="hidden" name="IdEquipe" value="@item.equipeId" />
                    <button type="submit" class="joinQuitButton" data-bs-toggle="modal">Apagar</button>
                </form>
            </div>
        </div>
    </div>
}


@foreach (var item in Model.getEquipes)
{
    <div class="modal fade" id="editTeamModal-@item.equipeId" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog" id="editTeamModal-dialog">
            <div class="modal-content post" id="editTeamModal-content">
                <div class="editTeamHeader">
                    <div class="editTeamModal-title">Edite sua equipe</div>
                    <button type="button" class="closeButton-delete" data-bs-dismiss="modal" aria-label="Fechar">X</button>
                </div>
                <form class="joinCommunity-form" id="joinCommunity-form" asp-asp-controller="EquipePage" asp-action="EditarEquipe" enctype="multipart/form-data">	
                    <div class="editTeam-form">	
                        <input type="hidden" name="EquipeId" value="@item.equipeId"/>
                        <input type="text" name="NomeEquipe" value="@item.nomeEquipe"/>
                        <div class="profileImage-input">
                            <input type="file" id="teamIcon-input" name="iconeEquipeArquivo"/>
                        </div>

                        <select name="JogoEquipe" class="form-control" asp-items="Html.GetEnumSelectList<JogosEnum>()">
                            <option value="@item.jogoEquipe">@EnumHelper.GetDisplayName(item.jogoEquipe)</option>
                        </select>
                        <textarea class="teamDescription-edit" name="DescricaoEquipe">@item.descricaoEquipe</textarea>
                    </div>
                    <button type="submit" class="submit-button" data-bs-toggle="modal">Salvar alterações</button>
                </form>
            </div>
        </div>
    </div>
}



<script>
    const findTeamsItems = document.querySelectorAll(".findTeams-items");
    const teamsSearch = document.getElementById("teamsSearch");

    teamsSearch.addEventListener("input", () => {
        const searchValue = teamsSearch.value.toLowerCase();

        findTeamsItems.forEach(item => {
            const teamName = item.getAttribute("data-teamName").toLowerCase();
            const teamGame = item.getAttribute("data-teamGame").toLowerCase();
            if (teamName.includes(searchValue) || teamGame.includes(searchValue)){
                item.style.display = "flex";
            } else {
                item.style.display = "none";
            }
        });
    });


    var errorMessage1 = '@TempData["ErrorMessageCharsNumber"]';
    if (errorMessage1) {
        alert(errorMessage1);
    }

    
    var errorMessage2 = '@TempData["ErrorMessageRepeatedName"]';
    if (errorMessage2) {
        alert(errorMessage2);
    }

    var errorMessage3 = '@TempData["ErrorMessageEmptyDescription"]';
    if (errorMessage3) {
        alert(errorMessage3);
    }
</script>

