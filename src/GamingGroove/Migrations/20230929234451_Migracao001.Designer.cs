// <auto-generated />
using System;
using GamingGroove.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamingGroove.Migrations
{
    [DbContext(typeof(GamingGrooveDbContext))]
    [Migration("20230929234451_Migracao001")]
    partial class Migracao001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GamingGroove.Models.AmizadeModel", b =>
                {
                    b.Property<int>("amizadeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("dataAmizade")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("estadoAmizade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("receptor_usuarioID")
                        .HasColumnType("int");

                    b.Property<int>("solicitante_usuarioID")
                        .HasColumnType("int");

                    b.HasKey("amizadeID");

                    b.HasIndex("receptor_usuarioID");

                    b.HasIndex("solicitante_usuarioID");

                    b.ToTable("Amizades");
                });

            modelBuilder.Entity("GamingGroove.Models.ChatModel", b =>
                {
                    b.Property<int>("chatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("amizadeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataChat")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("equipeID")
                        .HasColumnType("int");

                    b.Property<string>("historico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("chatID");

                    b.HasIndex("amizadeID");

                    b.HasIndex("equipeID");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("GamingGroove.Models.ComentarioModel", b =>
                {
                    b.Property<int>("comentarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("dataComentario")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("midiaComentario")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<int>("publicacaoID")
                        .HasColumnType("int");

                    b.Property<string>("textoComentario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("usuarioID")
                        .HasColumnType("int");

                    b.HasKey("comentarioID");

                    b.HasIndex("publicacaoID");

                    b.HasIndex("usuarioID");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("GamingGroove.Models.ComunidadeModel", b =>
                {
                    b.Property<int>("comunidadeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte[]>("capaComunidade")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<DateTime>("dataCriacaoComunidade")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("descricaoComunidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("iconeComunidade")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("jogosRelacionados")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nomeComunidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("comunidadeID");

                    b.ToTable("Comunidades");
                });

            modelBuilder.Entity("GamingGroove.Models.CurtidaModel", b =>
                {
                    b.Property<int>("curtidaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("dataCurtida")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("publicacaoID")
                        .HasColumnType("int");

                    b.Property<int>("usuarioID")
                        .HasColumnType("int");

                    b.HasKey("curtidaID");

                    b.HasIndex("publicacaoID");

                    b.HasIndex("usuarioID");

                    b.ToTable("Curtidas");
                });

            modelBuilder.Entity("GamingGroove.Models.DenunciaModel", b =>
                {
                    b.Property<int>("denunciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("comunidadeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataDenuncia")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("denunciado_usuarioID")
                        .HasColumnType("int");

                    b.Property<int>("denunciante_usuarioID")
                        .HasColumnType("int");

                    b.Property<string>("descricaoDenuncia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("publicacaoID")
                        .HasColumnType("int");

                    b.Property<string>("situacaoDenuncia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("denunciaID");

                    b.HasIndex("comunidadeID");

                    b.HasIndex("denunciado_usuarioID");

                    b.HasIndex("denunciante_usuarioID");

                    b.HasIndex("publicacaoID");

                    b.ToTable("Denuncias");
                });

            modelBuilder.Entity("GamingGroove.Models.EquipeModel", b =>
                {
                    b.Property<int>("equipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("dataCriacaoEquipe")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("descricaoEquipe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("iconeEquipe")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("jogoEquipe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nomeEquipe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("equipeID");

                    b.ToTable("Equipes");
                });

            modelBuilder.Entity("GamingGroove.Models.PublicacaoModel", b =>
                {
                    b.Property<int>("publicacaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("comunidadeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataPublicacao")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("midiaPublicacao")
                        .HasColumnType("longblob");

                    b.Property<string>("textoPublicacao")
                        .HasColumnType("longtext");

                    b.Property<int>("usuarioID")
                        .HasColumnType("int");

                    b.HasKey("publicacaoID");

                    b.HasIndex("comunidadeID");

                    b.HasIndex("usuarioID");

                    b.ToTable("Publicacoes");
                });

            modelBuilder.Entity("GamingGroove.Models.UsuarioComunidadeModel", b =>
                {
                    b.Property<int>("usuarioComunidadeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cargo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("comunidadeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataVinculoComunidade")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("usuarioID")
                        .HasColumnType("int");

                    b.HasKey("usuarioComunidadeID");

                    b.HasIndex("comunidadeID");

                    b.HasIndex("usuarioID");

                    b.ToTable("UsuariosComunidades");
                });

            modelBuilder.Entity("GamingGroove.Models.UsuarioEquipeModel", b =>
                {
                    b.Property<int>("usuarioEquipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cargoEquipe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("dataVinculoEquipe")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("equipeID")
                        .HasColumnType("int");

                    b.Property<int>("usuarioID")
                        .HasColumnType("int");

                    b.HasKey("usuarioEquipeID");

                    b.HasIndex("equipeID");

                    b.HasIndex("usuarioID");

                    b.ToTable("UsuariosEquipes");
                });

            modelBuilder.Entity("GamingGroove.Models.UsuarioModel", b =>
                {
                    b.Property<int>("usuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("biografia")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("capaPerfil")
                        .HasColumnType("longblob");

                    b.Property<DateTime>("dataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("fotosGaleria")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("iconePerfil")
                        .HasColumnType("longblob");

                    b.Property<string>("jogosFavoritos")
                        .HasColumnType("longtext");

                    b.Property<string>("nomeCompleto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nomeUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("usuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GamingGroove.Models.AmizadeModel", b =>
                {
                    b.HasOne("GamingGroove.Models.UsuarioModel", "receptor_")
                        .WithMany()
                        .HasForeignKey("receptor_usuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroove.Models.UsuarioModel", "solicitante_")
                        .WithMany()
                        .HasForeignKey("solicitante_usuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("receptor_");

                    b.Navigation("solicitante_");
                });

            modelBuilder.Entity("GamingGroove.Models.ChatModel", b =>
                {
                    b.HasOne("GamingGroove.Models.AmizadeModel", "amizade")
                        .WithMany()
                        .HasForeignKey("amizadeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroove.Models.EquipeModel", "equipe")
                        .WithMany()
                        .HasForeignKey("equipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("amizade");

                    b.Navigation("equipe");
                });

            modelBuilder.Entity("GamingGroove.Models.ComentarioModel", b =>
                {
                    b.HasOne("GamingGroove.Models.PublicacaoModel", "publicacao")
                        .WithMany()
                        .HasForeignKey("publicacaoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroove.Models.UsuarioModel", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("publicacao");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("GamingGroove.Models.CurtidaModel", b =>
                {
                    b.HasOne("GamingGroove.Models.PublicacaoModel", "publicacao")
                        .WithMany()
                        .HasForeignKey("publicacaoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroove.Models.UsuarioModel", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("publicacao");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("GamingGroove.Models.DenunciaModel", b =>
                {
                    b.HasOne("GamingGroove.Models.ComunidadeModel", "comunidade")
                        .WithMany()
                        .HasForeignKey("comunidadeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroove.Models.UsuarioModel", "denunciado_")
                        .WithMany()
                        .HasForeignKey("denunciado_usuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroove.Models.UsuarioModel", "denunciante_")
                        .WithMany()
                        .HasForeignKey("denunciante_usuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroove.Models.PublicacaoModel", "publicacao")
                        .WithMany()
                        .HasForeignKey("publicacaoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("comunidade");

                    b.Navigation("denunciado_");

                    b.Navigation("denunciante_");

                    b.Navigation("publicacao");
                });

            modelBuilder.Entity("GamingGroove.Models.PublicacaoModel", b =>
                {
                    b.HasOne("GamingGroove.Models.ComunidadeModel", "comunidade")
                        .WithMany()
                        .HasForeignKey("comunidadeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroove.Models.UsuarioModel", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("comunidade");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("GamingGroove.Models.UsuarioComunidadeModel", b =>
                {
                    b.HasOne("GamingGroove.Models.ComunidadeModel", "comunidade")
                        .WithMany()
                        .HasForeignKey("comunidadeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroove.Models.UsuarioModel", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("comunidade");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("GamingGroove.Models.UsuarioEquipeModel", b =>
                {
                    b.HasOne("GamingGroove.Models.EquipeModel", "equipe")
                        .WithMany()
                        .HasForeignKey("equipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroove.Models.UsuarioModel", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("equipe");

                    b.Navigation("usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
