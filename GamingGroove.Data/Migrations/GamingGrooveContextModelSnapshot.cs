// <auto-generated />
using System;
using GamingGroove.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamingGroove.Data.Migrations
{
    [DbContext(typeof(GamingGrooveContext))]
    partial class GamingGrooveContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GamingGroove.Data.Models.Chat", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Usuario1Id")
                        .HasColumnType("int");

                    b.Property<int>("Usuario2Id")
                        .HasColumnType("int");

                    b.HasKey("ChatId");

                    b.HasIndex("Usuario1Id");

                    b.HasIndex("Usuario2Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("GamingGroove.Data.Models.Comunidade", b =>
                {
                    b.Property<int>("ComunidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("ComunidadeId");

                    b.ToTable("Comunidades");
                });

            modelBuilder.Entity("GamingGroove.Data.Models.Equipe", b =>
                {
                    b.Property<int>("EquipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int>("LiderId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("EquipeId");

                    b.HasIndex("LiderId");

                    b.ToTable("Equipes");
                });

            modelBuilder.Entity("GamingGroove.Data.Models.Mensagem", b =>
                {
                    b.Property<int>("MensagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("Conteudo")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataDeEnvio")
                        .HasColumnType("datetime(6)");

                    b.HasKey("MensagemId");

                    b.HasIndex("ChatId");

                    b.ToTable("Mensagens");
                });

            modelBuilder.Entity("GamingGroove.Data.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Conteudo")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataDePublicacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("GamingGroove.Data.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ComunidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int?>("EquipeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext");

                    b.HasKey("UsuarioId");

                    b.HasIndex("ComunidadeId");

                    b.HasIndex("EquipeId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GamingGroove.Data.Models.Chat", b =>
                {
                    b.HasOne("GamingGroove.Data.Models.Usuario", "Usuario1")
                        .WithMany()
                        .HasForeignKey("Usuario1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroove.Data.Models.Usuario", "Usuario2")
                        .WithMany()
                        .HasForeignKey("Usuario2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario1");

                    b.Navigation("Usuario2");
                });

            modelBuilder.Entity("GamingGroove.Data.Models.Equipe", b =>
                {
                    b.HasOne("GamingGroove.Data.Models.Usuario", "Lider")
                        .WithMany()
                        .HasForeignKey("LiderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lider");
                });

            modelBuilder.Entity("GamingGroove.Data.Models.Mensagem", b =>
                {
                    b.HasOne("GamingGroove.Data.Models.Chat", "Chat")
                        .WithMany("Mensagens")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("GamingGroove.Data.Models.Post", b =>
                {
                    b.HasOne("GamingGroove.Data.Models.Usuario", "Usuario")
                        .WithMany("Posts")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GamingGroove.Data.Models.Usuario", b =>
                {
                    b.HasOne("GamingGroove.Data.Models.Comunidade", null)
                        .WithMany("Membros")
                        .HasForeignKey("ComunidadeId");

                    b.HasOne("GamingGroove.Data.Models.Equipe", null)
                        .WithMany("Membros")
                        .HasForeignKey("EquipeId");
                });

            modelBuilder.Entity("GamingGroove.Data.Models.Chat", b =>
                {
                    b.Navigation("Mensagens");
                });

            modelBuilder.Entity("GamingGroove.Data.Models.Comunidade", b =>
                {
                    b.Navigation("Membros");
                });

            modelBuilder.Entity("GamingGroove.Data.Models.Equipe", b =>
                {
                    b.Navigation("Membros");
                });

            modelBuilder.Entity("GamingGroove.Data.Models.Usuario", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
